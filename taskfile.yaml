version: "3"

dotenv: [".env", "{{.ENV}}/.env", "{{.HOME}}/.env"]

tasks:
  up:
    desc: Start the service and dependencies
    cmds:
      - docker compose -f docker-compose.yaml -f docker-compose.dev.yaml up -d
      - docker compose -f docker-compose.yaml -f docker-compose.dev.yaml logs -f core

  build:
    desc: Rebuild and restart the core service
    cmds:
      - docker compose -f docker-compose.yaml -f docker-compose.dev.yaml up --build core

  # Remember to switch the "host=db" to "host=localhost" in the .env file
  migrate:
    desc: Apply all migrations to the database using goose
    cmds:
      - go tool goose -dir ./migrations postgres "{{.DATABASE_DSN}}" up

  seed:
    desc: Seed the database with initial data
    cmds:
      - echo "Running database seeds from /seed directory..."
      - for: [seed/*.sql]
        cmd: docker compose -f docker-compose.yaml -f docker-compose.dev.yaml exec -T db psql -U core -d core < {{.ITEM}}

  down:
    desc: Stop all containers
    cmds:
      - docker compose -f docker-compose.yaml -f docker-compose.dev.yaml down

  logs:
    desc: View logs from all services
    cmds:
      - docker compose -f docker-compose.yaml -f docker-compose.dev.yaml logs -f

  db:
    desc: Connect to the database
    cmds:
      - docker compose -f docker-compose.yaml -f docker-compose.dev.yaml exec db psql -U core -d core

  init:
    desc: Initialize the project
    cmds:
      - task: up
      - task: migrate
      - task: seed
